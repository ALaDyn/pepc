#
#  Makefile for treemp and test programs
#

PREFIX = ..

#  Get machine-dependent flags

ARCH = linux.mk
#ARCH = ibm-p690.mk
#ARCH = bgl.mk
#ARCH = arc-icl.mk

include $(ARCH)


#  -----------------------------------------------------------------------------------------
#  You shouldn't need to edit anything below here unless you're adding new source code
#   - change machine/compiler options in the $ARCH file
#
#  -----------------------------------------------------------------------------------------

FFLAGS =  $(FFLAGS1) $(DB) $(LISTING) $(PG) $(TUNE)
DFLAGS = $(FFLAGS1) $(DB) 
PPFLAGS = $(PREPROC)
LDFLAGS =  $(XNBODYLIBS) $(VISITLIBS) $(NETCDFLIB) $(MPITRACE) 
CFLAGS = $(CFLAGS1)

.SUFFIXES: .f90 .F90


# -------------------------------------------------------------------------------------------

# Source files

# -------------------------------------------------------------------------------------------



MODULES.f90 =   physvars.f90 


SOURCES.f90 =	pegs.f90 \
		setup.f90 setup_particles.f90 setup_stars.f90 \
		dump_inputs.f90 \
		energy_cons.f90 potenergy.f90 kinenergy.f90\
		forces_p.f90 \
		velocities.f90 push.f90 \
		diagnostics.f90 dump.f90 \
		densities.f90 pot_grid.f90 slices.f90 \
		stars.f90 open_files.f90 close_files.f90

# -------------------------------------------------------------------------------------------

# Names of application object files derived from sources

appobjs = $(PPSRC.F90:.F90=.o) $(SOURCES.f90:.f90=.o) $(NCOBJS)
appmods =  $(MODULES.f90:.f90=.o)
mods = $(appmods)

default: lpepc pegs


#  preprocessor rules

.F90.f90: 
	@echo "Preprocessing $<"
	$(CPP)  $(PPFLAGS) $< $@

#  compile rules

.f90.o:   
	$(FC) -c $(FFLAGS) $(VISITLIBS) $(DBFLAGS) $<

#  explicit rules for f90 modules to avoid conflict with built-in ones
physvars.o: physvars.f90
	$(FC) -c $(FFLAGS) $(VISITLIBS) $(DBFLAGS) physvars.f90

.c.o:   
	$(CC) -c $(CFLAGS) $<


# -----------------------------------------------------------------------------------------
#  targets

pegs:	$(appmods) $(appobjs) liblpepc.a
	@echo "\n Creating pegs ...\n"
	$(FC)  $(FFLAGS)  -o ../bin/$@ $(appobjs) $(appmods) $(LIBPEPC) $(IBMLIB) $(LDFLAGS) $(LIBSF_MPI) 
#	/bin/ln -sf $(PREFIX)/pepc-g/pegs $(PREFIX)/bin/pegs
	@echo "... done\n"

debug: $(appmods) $(appobjs) liblpepc.a
	@echo "\n Creating pepc_debug ...\n"
	$(FC)  $(FFLAGS)  -o ../bin/pegs_debug $(appobjs) $(appmods) $(LIBPEPC) $(IBMLIB) $(LDFLAGS) $(LIBSF_MPI) 
	 @echo "... done\n"


# Update PEPC library and headers
lpepc:  
	@echo 'Copying machine options from $(ARCH)'
	cp $(ARCH) ../lpepcsrc/arch.mk
	cd ../lpepcsrc; make lpepc; cd -
	/bin/ln -sf $(PREFIX)/lpepcsrc/liblpepc.a $(PREFIX)/pegs/liblpepc.a
	/bin/ln -sf $(PREFIX)/lpepcsrc/treevars.mod $(PREFIX)/pegs/treevars.mod
	/bin/ln -sf $(PREFIX)/lpepcsrc/utils.mod $(PREFIX)/pegs/utils.mod



rand:	 rantest.o
	$(FC) $(FFLAGS) -o rand rantest.o

clean:  cleanapp cleanlib

cleanapp:
	@echo "Cleaning application binaries .."; /bin/rm -f bin/*.o   *% *~ bin/key rand *.o *.pif core *.lst *.a *.mod opari.rc *.mod.F90 *.opari.inc ../bin/pegs
	@echo "Cleaning postprocessed sources .."; /bin/rm -f  $(PPSRC.f90)

cleanlib:
	@echo "Cleaning lpepc library .." 
	cd ../lpepcsrc;	/bin/rm -f liblpepc.a *.o *.mod.F90 *.lst *.opari.inc; cd -

#cleanpre: 
#	@echo "Cleaning pre-processed .f90 files .."
#	/bin/rm -f 

cleancore: 	
	/bin/rm $(pepcobjs) 

cleandata: 
	/bin/rm -f fort.* *.dat *.out *.gle 

depend:
	$(F90DEP)

### DO NOT DELETE OR EDIT THIS LINE
# Everything from here on down is generated by f90depend
# so do NOT add any translation rules below here.

#--- Include-Dependencies
# Special dependencies
