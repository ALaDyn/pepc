#
#  Makefile for treemp and test programs
#

MPI_DIR  = 
PREFIX = ..

#  Get machine-dependent flags

#  --------------------------------------------------------------------------------------
#  You shouldn't need to edit anything below here unless you're adding new source code
#  to add/modify compiler options:
#   - add option in ./configure (./configure --help lists all available options)
#   - or modify configure.in 
#  --------------------------------------------------------------------------------------

VISIT   = 
DEFINES = 
# Machine architecture - subdirectory for binaries
MACH = bgp
FC      = mpixlf90
CC      = mpicc
FFLAGS  =  -WF,-DHAVE_PRIVATE_CONFIGS -qarch=450d -qtune=450 -qnosave  -qsuffix=f=f90 -qsuffix=cpp=F90 -O3
LDFLAGS = 

LIBPEPC   = -L../lpepcsrc/$(MACH) -llpepc
LIBVISIT  =    
LIBNETCDF = @NETCDF@
LIBS      = $(LIBPEPC) $(LIBVISIT) $(LIBNETCDF)

.SUFFIXES: .f90 .F90


# -------------------------------------------------------------------------------------------

# Source files

# -------------------------------------------------------------------------------------------
VISIT.F90   =   vis_parts_nbody.F90

PPSRC.F90   =   main.F90 

MODULES.f90 =   physvars.f90 tree_utils.f90

SOURCES.f90 =	setup.f90 configure.f90 special_start.f90 open_files.f90 close_files.f90 sorting.f90

# -------------------------------------------------------------------------------------------

# Names of application object files derived from sources
# Prefix added for multi-arch builds

appobjs = $(addprefix $(MACH)/, $(PPSRC.F90:.F90=.o)) \
	  $(addprefix $(MACH)/, $(SOURCES.f90:.f90=.o)) \
	  $(addprefix $(MACH)/, $(NCOBJS) )
visitobjs = $(addprefix $(MACH)/, $(VISIT.F90:.F90=.o) )
appmods =  $(addprefix $(MACH)/, $(MODULES.f90:.f90=.o))
mods = $(appmods)

default: sort-test

dirs: 	
	if [ ! -d $(MACH) ]; then mkdir $(MACH); fi

#  compile rules
$(MACH)/%.o: %.f90  
	$(FC) -c $(FFLAGS) $(DEFINES) $< -o $@

$(MACH)/%.o: %.F90  
	$(FC) -c $(FFLAGS) $(DEFINES) $< -o $@


#  explicit rules for f90 modules to avoid conflict with built-in ones
$(MACH)/physvars.o: physvars.f90
	$(FC) -c $(FFLAGS) $(DEFINES) physvars.f90 -o $@

$(MACH)/%.o: %.c  
	$(CC) -c $(CFLAGS) $< -o $@


#all: MODS pepce


# -----------------------------------------------------------------------------------------
#  targets

sort-test: $(APPOBJS) $(MODS)
	@echo "Creating application binary ../bin/sort_test ..."
	$(FC)  $(FFLAGS) $(LDFLAGS) -o ../bin/sort_test $(APPOBJS) $(MODS) $(LIBVISIT) $(LIBMPI)


debug:	$(OBJECTS)
	@echo "Loading object files using flags $(DBFLAGS)"
	$(FC) $(LDFLAGS)  $(VISITLIBS) $(DBFLAGS)  -o $@ $(OBJECTS)


rand:	 rantest.o
	$(FC) $(FFLAGS) -o rand rantest.o

clean:
	/bin/rm -f $(MACH)/*.o  *% *~ bin/key rand *.o *.pif core *.mod $(MACH)/*.mod 

cleanbin: /bin/rm -r pepce debug core

cleancore: 	
	/bin/rm $(pepcobjs) 
 

depend:
	./f90depend -u -I/usr/lpp/ppe.poe/include/thread *.f90

default: pepce

### DO NOT DELETE OR EDIT THIS LINE
# Everything from here on down is generated by f90depend
# so do NOT add any translation rules below here.

#--- Include-Dependencies

#--- Module-Dependencies

close_files.o: physvars.o
cold_start.o: physvars.o utils.o
configure.o: physvars.o
cutvector.o: physvars.o
energy_cons.o: physvars.o utils.o
face.o: physvars.o
forces.o: physvars.o utils.o
kinenergy.o: physvars.o
open_files.o: physvars.o
param_dump.o: physvars.o utils.o
pepce.o: physvars.o utils.o
potenergy.o: physvars.o
push.o: physvars.o
randion.o: physvars.o utils.o
scramble_v.o: physvars.o utils.o
setup.o: physvars.o
special_start.o: physvars.o utils.o
velocities.o: physvars.o utils.o

