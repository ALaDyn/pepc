#
#  Makefile for treemp and test programs
#

MPI_DIR  = @MPI_DIR@
PREFIX = ..

#  Get machine-dependent flags

#  --------------------------------------------------------------------------------------
#  You shouldn't need to edit anything below here unless you're adding new source code
#  to add/modify compiler options:
#   - add option in ./configure (./configure --help lists all available options)
#   - or modify configure.in 
#  --------------------------------------------------------------------------------------

VISIT   = @VISIT@
DEFINES = @VISITDEF@
# Machine architecture - subdirectory for binaries
MACH = @MACH@
FC      = @MPIF90@
CC      = @MPICC@
FFLAGS  = @FFLAGS@ @FFLAGS_OS@ @OPT@
LDFLAGS = @LDFLAGS@

LIBPEPC   = -L../lpepcsrc/$(MACH) -llpepc
LIBVISIT  = @VISIT@ @LVISIT@ @XNBODY@ @VISITLIBS@
LIBNETCDF = @NETCDF@
LIBS      = $(LIBPEPC) $(LIBVISIT) $(LIBNETCDF)

.SUFFIXES: .f90 .F90


# -------------------------------------------------------------------------------------------

# Source files

# -------------------------------------------------------------------------------------------
VISIT.F90   =   vis_parts_nbody.F90

PPSRC.F90   =   main.F90 

MODULES.f90 =   physvars.f90 tree_utils.f90

SOURCES.f90 =	setup.f90 configure.f90 special_start.f90 open_files.f90 close_files.f90 sorting.f90

# -------------------------------------------------------------------------------------------

# Names of application object files derived from sources
# Prefix added for multi-arch builds

appobjs = $(addprefix $(MACH)/, $(PPSRC.F90:.F90=.o)) \
	  $(addprefix $(MACH)/, $(SOURCES.f90:.f90=.o)) \
	  $(addprefix $(MACH)/, $(NCOBJS) )
visitobjs = $(addprefix $(MACH)/, $(VISIT.F90:.F90=.o) )
appmods =  $(addprefix $(MACH)/, $(MODULES.f90:.f90=.o))
mods = $(appmods)

default: dirs sort-test

dirs: 	
	if [ ! -d $(MACH) ]; then mkdir $(MACH); fi

#  compile rules
$(MACH)/%.o: %.f90  
	$(FC) -c $(FFLAGS) $(DEFINES) $< -o $@

$(MACH)/%.o: %.F90  
	$(FC) -c $(FFLAGS) $(DEFINES) $< -o $@


#  explicit rules for f90 modules to avoid conflict with built-in ones
$(MACH)/physvars.o: physvars.f90
	$(FC) -c $(FFLAGS) $(DEFINES) physvars.f90 -o $@

$(MACH)/%.o: %.c  
	$(CC) -c $(CFLAGS) $< -o $@


# -----------------------------------------------------------------------------------------
#  targets

sort-test: $(appmods) $(appobjs) 
	@echo "Creating application binary ../bin/sort_test ..."
	$(FC)  $(FFLAGS) $(LDFLAGS) -o ../bin/sort_test $(APPOBJS) $(MODS) $(LIBVISIT) $(LIBMPI)

clean:
	/bin/rm -f $(MACH)/*.o  *% *~ bin/key rand *.o *.pif core *.mod $(MACH)/*.mod 
