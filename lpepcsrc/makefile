# 64-bit hardware

#
#  Makefile for treemp and test programs
#



#DBFLAGS = -g -Rabp -ev  -q64 -qrealsize=8  -qsuffix=f=f90 -qcheck
LDFLAGS = -q64 -qrealsize=8  -g 
# For apprentice
#FFLAGS =   -eA -m4 -O2,inline4
#LDFLAGS = -lpmpi -Xm -lapp



# For IBM AIX compiler


IPA=-qipa=inline=key2addr -qipa=inline=make_hashentry -qipa=inline=key2node -qipa=inline=next_node

#PG=-pg -g -qfullpath
DB= -g -qfullpath -qcheck
HPM = -lhpm
LISTING=-qreport -qlist -qlistopt -qsource 
#MPITRACE= -L/usr/local/beta/lib -lmpitrace
#MPITRACE= -L/usr/local/beta/lib -lmpiprof
#MPITRACE=  -L/usr/local/beta/lib -lmpihpm -lpmapi
#MPITRACE= -lmpitrace
#MPITRACE= -lmpiprof
#MPITRACE= -lsummary -lpmapi
#MPITRACE=  -lmpihpm -lpmapi
Q64=-q64
FFLAGS1 = -qrealsize=8 -qsuffix=f=f90 -qsuffix=cpp=F90 
#


# Intel compiler - must promote all floating point to real*8 or MPI will fail

#DB = -g -check bounds -traceback
#FFLAGS1 = -r8  ## -O3
TUNE= -qarch=pwr4 -qtune=pwr4 -O5 $(IPA) 
# $(PG) $(HPM)

#FFLAGS =  $(FFLAGS1) $(DB) $(Q64) $(PG) -qhot
FFLAGS =  $(FFLAGS1) $(DB) $(Q64) $(PG) 
#FFLAGS =  $(FFLAGS1) $(DB) $(Q64) $(TUNE)
TFLAGS = $(FFLAGS) $(TUNE)

#ANALYS = -lpmpi -Xm -lpat pat.cld


LDFLAGS = $(MPITRACE)
RANLIB  = ranlib
LIBDIR  = .
AR      = ar -X64
#AR      = ar 
LIBPEPC = -L$(LIBDIR) -llpepc
pepclib = liblpepc.a

.SUFFIXES: .f90


#FC = mpxlf90_r
#FC = ifort
# MPICH wrappers
# full MPI path usually something like /usr/local/mpich/bin
CC          = mpicc
CCC         = mpicxx
F77         = mpif77
CLINKER     = mpicc
CCLINKER    = mpicxx
FLINKER     = mpif77
F90         = mpif90
F90LINKER   = mpif90	  


# KOJAK instrumentation
#FC = mpxlf90_r -qdebug=function_trace
FC = kinst mpxlf90_r

# -------------------------------------------------------------------------------------------

# Source files

#-------------------------------------------------------------------------------------------
# Pepc library

PEPCMOD.f90 =  treevars.f90 tree_utils.f90
PEPCSRC.f90 =  tree_domains.f90 setup_treearrays.f90 \
		tree_build.f90  tree_branches.f90 tree_fill.f90 tree_properties.f90 \
		tree_walk.f90	tree_prefetch.f90 fields.f90 sum_force.f90 sum_bfield.f90 \
		make_hashentry.f90 get_address.f90  get_node.f90 key_test.f90 get_next_node.f90 \
	        diagnose_tree.f90 check_table.f90 \
		draw_domains.f90 draw_tree2d.f90 draw_lists.f90 \
		fields.f90 fields_p.f90

POBJS = $(PEPCSRC.f90:.f90=.o)
PMODS =  $(PEPCMOD.f90:.f90=.o)




#  compile mode for PEPC routines 
#
all: pepcmods pepc

#  compile mode
.f90.o:   
	$(FC) -c $(FFLAGS) $(INCLUDE) $(DBFLAGS) $<

$(pepclib): lpepc
lpepc:  $(POBJS) $(PMODS) 
	@echo "Creating PEPC library ..."
	rm -f liblpepc.a
	$(AR) q liblpepc.a $(POBJS) $(PMODS)
	$(RANLIB) liblpepc.a
	@echo "... done"

mods:   $(MODS) 

debug:	$(OBJECTS)
	@echo "Loading object files using flags $(DBFLAGS)"
	$(FC) $(LDFLAGS)  $(VISITLIBS) $(DBFLAGS)  -o $@ $(OBJECTS)

clean:
	/bin/rm -f bin/*.o  *% *~ bin/key rand *.o *.pif core *.mod 

cleanbin: /bin/rm -r pepc debug core

cleancore: 	
	/bin/rm $(POBJS) 

cleandata: 
	/bin/rm -f fort.* *.dat *.out *.gle 

depend:
	./f90depend -u -I/usr/lpp/ppe.poe/include/thread *.f90

default: treemp

### DO NOT DELETE OR EDIT THIS LINE
# Everything from here on down is generated by f90depend
# so do NOT add any translation rules below here.

#--- Include-Dependencies

fields.o: /usr/lpp/ppe.poe/include/thread/mpif.h
get_address.o: /usr/lpp/ppe.poe/include/thread/mpif.h
setup_treearrays.o: /usr/lpp/ppe.poe/include/thread/mpif.h
tree_branches.o: /usr/lpp/ppe.poe/include/thread/mpif.h
tree_build.o: /usr/lpp/ppe.poe/include/thread/mpif.h
tree_domains.o: /usr/lpp/ppe.poe/include/thread/mpif.h
tree_fill.o: /usr/lpp/ppe.poe/include/thread/mpif.h
tree_prefetch.o: /usr/lpp/ppe.poe/include/thread/mpif.h
tree_properties.o: /usr/lpp/ppe.poe/include/thread/mpif.h
tree_utils.o: /usr/lpp/ppe.poe/include/thread/mpif.h
tree_walk.o: /usr/lpp/ppe.poe/include/thread/mpif.h


#--- Module-Dependencies

check_table.o: treevars.o utils.o
diagnose_tree.o: treevars.o
draw2d.o: treevars.o
draw2d_hash.o: treevars.o
draw_domains.o: treevars.o
draw_lists.o: treevars.o
draw_map.o: treevars.o
draw_tree2d.o: treevars.o
fields.o: treevars.o utils.o
get_address.o: treevars.o
get_next_node.o: treevars.o utils.o
get_node.o: treevars.o utils.o
key_test.o: treevars.o utils.o
make_hashentry.o: treevars.o utils.o
setup_treearrays.o: treevars.o
sum_bfield.o: treevars.o
sum_bond.o: treevars.o
sum_force.o: treevars.o
sum_lennardjones.o: treevars.o
tree_branches.o: treevars.o tree_utils.o
tree_build.o: treevars.o
tree_domains.o: treevars.o tree_utils.o utils.o
tree_fill.o: treevars.o tree_utils.o
tree_prefetch.o: treevars.o tree_utils.o
tree_properties.o: treevars.o tree_utils.o
tree_walk.o: treevars.o tree_utils.o utils.o


