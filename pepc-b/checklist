Main
----
pepcb.f90			Main pepc-b control code
setup_arrays.f90		Allocated particle, field arrays
setup.f90			Setup for constants, switches
configure.f90			Setup particle configuration
	+ config_private.h - remove?
force_laser.f90			Calculate forces due to external fields
integrator.f90			Integrator control
diagnostics.f90			Diagnostics
rezone.f90		        Emulate moving window - discard/replenish particles


Modules
-------

module_physvars:
	physvars.f90		Global physics constants, variables 
	+ namelist.h		Namelist inputs (needed by setup and param_dump)

module_particle_props:		Contains particle property arrays

module_geometry:
	plasma_start.f90	Plasma target geometries
	special_start.f90	User-defined configs
	add_electrons.f90	Adds electrons to ion lattice
	add_ramp.f90		Add density ramp to target
	cluster_sa.f90		Stretch homogeneous sphere into 'Andreev' profile
	stretch_sphere.f90	Convert uniform sphere to tapered density profile
	double_target.f90	Add second target shifted by displacement vector displace(1:3)
	mc_config.f90		OBSOLETE:  Do Monte-Carlo initialisation of particle positions
	constrain.f90		Place particles within chosen container
	cutvector.f90		Cuts a vector on the surface face_nr
	face.f90		Function to set up bounded geometry targets in conjunction with PLASMA_START

module_velocity_setup:	
	maxwell1.f90		Initialises 1D Maxwellian velocity distribution
	scramble_v.f90		Remove correlations between velocity components (3V)
	perturb_temp.f90	Add temperature perturbation to isotropic thermal distrib
	cold_start.f90		Set all velocities to zero

module_integration_scheme:		(MW: module_pusher)
	velocities.f90		Calculate velocities from accelerations (ES only); includes NVT dynamics etc
	push_em.f90		EM particle push (Boris, 2V)
	push_full3v.f90		3V pusher	
	push_nonrel.f90		Non-relativistic pusher
	push.f90		Update particle coordinates

module_field_grid:
	densities.f90		3D density rather for rhoi
	sum_fieldave.f90	1D gather for time-averaged electric fields
	sum_fields.f90		3D gather for DC fields
	sum_radial.f90		1D gather for spherically symmetric fields
	pot_grid.f90		3D field and potential gather on grid

module_laser:			
	laser.f90		Laser intensity and focal position
	emoblique.f90		Oblique incidence solution
	emplane.f90		Plane wave laser source
	emplane_lin.f90		Plane wave, linear rise-time
	empond.f90		plane wave with finite rise-time and Gaussian spot - returns Ez, By, Bx, Az
	fpond.f90		Compute relativistic fpond for standing wave field
	fpond_gauss.f90		Variations ..
	fpond_lin.f90
	fpond_sin2.f90
	fpond_helmc.f90		Fields from Helmholtz solution for EM standing wave, c-pol light
	fpond_helm.f90		Fields from Helmholtz solution for EM standing wave, l-pol light
	em_helmholtz.f90	1D Helmholtz solver for laser
	trisolve.f90		Tri-diag solver for 1D Helmholtz equation
	laser_bullet.f90	Ponderomotive fields for moving laser pulse
	track_nc.f90		Tracks critical surface of laser
	density_helmholtz.f90	3D Density gather for rhoi used in Helmholtz solver

module_particle_beam:
	beam_control.f90	Particle beam initialisation (interactive)
	beam_dust.f90		Sets up spherical dust particle
	beam.f90		Sets up particle beam on CPU 0

module_particle_boundaries:
	earth_plate.f90		Emulate grounded earth plate at z=0: NEEDS RETHINK with image BCs
	reinject.f90		Thermal particle reinjection
	reset_ions.f90		Reset ion mass and velocity after const-temp eqm phase


module_diagnostics:
	param_dump.f90		Write out inputs to run protocol
	energy_cons.f90		Energy conservation I/O	
	kinenergy.f90		Calculate kinetic energies
	potenergy.f90		Calculate electrostatic and magnetic energies
	laser_hist.f90		Writes out laser parameters
	error_test.f90		Estimate force errors
	force_direct.f90	PP force-sum

module_io:
	open_files.f90		Open protocol files	
	close_files.f90		Close protocol files
	abort.f90		MPI abort cleanup
	stamp.f90		Date & time stamp
	dump_ascii.f90		Ascii particle dump	
	dump.f90		Linked copy
	dump_sion.f90		Particle dump in SIONLIB format
	predef_parts_ascii.f90	Restart from ASCII checkpoint
	predef_parts.f90
	predef_parts_sion.f90	Restart from SIONLIB checkpoint
	dump_fields.f90
	field_lineout.f90	1D field lineouts (computed from pseudoparts)
	slices.f90		1D lineouts of densities, laser fields - TODO

module_utilities:
	utils.f90		I/O routines, random number generator rano
	randtest.f90		Test routine for random nos.

module_xnbody:
	vis_config.f90		I/O for xnbody online visualisation
	vis_control.f90
	vis_domains_nbody.f90
	vis_fields.f90
	vis_fields_nbody.f90
	visit_dump.f90
	vis_parts.f90
	vis_parts_nbody.f90
	vis_vecfields_nbody.f90
	ncnbody.c

------------------------

NOTES
----------
module_treevars no longer accessible to pepc-b routines
namelist.h moved to bottom of module_physvars; deleted from sources
Need to separate particle property arrays from physics scalars to make use of geometry setup  - OK
	- included B-field at particle: need to zero fields in configure
Moved velocity setup from plasma_start to separate routine (in module_velocities)
Included my_rank; removed vt, velocity_config in call to plasma_start

TODO: Need (tree) routine to compute field along grid 
	- replacement for field_lineout
	- also in sum_fieldave, sum_radial

New variables needed in module_physvars:

fetch_mult
np_mult
ipefile

Removed calls to tree_allocate/deallocate - mem. management self-contained in fields.













