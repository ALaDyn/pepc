#
#  Makefile for treemp and test programs
#

MPI_DIR  = @MPI_DIR@
PREFIX = ..

#  Get machine-dependent flags

#  --------------------------------------------------------------------------------------
#  You shouldn't need to edit anything below here unless you're adding new source code
#  to add/modify compiler options:
#   - add option in ./configure (./configure --help lists all available options)
#   - or modify configure.in 
#  --------------------------------------------------------------------------------------

DEFINES = @VISITDEF@ @NETCDFDEF@
# Machine architecture - subdirectory for binaries
MACH = @MACH@
SION = @SION@
SION_LIB = @SION_LIB@
TARGET = $(PREFIX)/bin/pepcb_$(MACH)_$(SION)  # name of executable

FC      = @MPIF90@
CC      = @MPICC@
FFLAGS  = @FFLAGS@ @FFLAGS_OS@ @OPT@
CFLAGS  = @CFLAGS@ @CFLAGS_OS@
LDFLAGS = @LDFLAGS@

LIBPEPC   = -L../lpepcsrc/$(MACH) -llpepc
LIBVISIT  = @VISIT@ @LVISIT@ @XNBODY@ @VISITLIBS@ 
LIBNETCDF = @NETCDFLIB@
LIBTRACE = @MPITRACE@
LIBS      = $(LIBPEPC) $(LIBVISIT) $(LIBNETCDF) $(LIBTRACE) 
NCOBJS = @NCOBJS@

.SUFFIXES: .f90 .F90


# -------------------------------------------------------------------------------------------

# Source files

# -------------------------------------------------------------------------------------------

VISIT.F90   =   vis_parts_nbody.F90 vis_fields_nbody.F90 vis_control.F90 vis_vecfields_nbody.F90 vis_config.F90
PPSRC.F90   =   pepcb.F90 configure.F90 diagnostics.F90 
MODULES.f90 =   physvars.f90 

SOURCES.f90 =   \
                setup.f90 setup_arrays.f90 stamp.f90 \
                plasma_start.f90 predef_parts.f90 maxwell1.f90 cold_start.f90 \
                special_start.f90 constrain.f90 cutvector.f90 face.f90 \
                scramble_v.f90 reset_ions.f90 add_electrons.f90 stretch_sphere.f90 \
                cluster_sa.f90 laser.f90 beam.f90 beam_dust.f90 rezone.f90\
                mc_config.f90 \
                velocities.f90 perturb_temp.f90 \
                energy_cons.f90 potenergy.f90 kinenergy.f90\
                force_laser.f90 emplane_lin.f90 \
                fpond.f90 fpond_lin.f90 empond.f90 emplane.f90 laser_bullet.f90 emoblique.f90 fpond_helm.f90 \
		density_helmholtz.f90 em_helmholtz.f90 trisolve.f90 \
                push_em.f90 push_full3v.f90 \
                push.f90 reinject.f90 earth_plate.f90 add_ramp.f90 \
                dump.f90 param_dump.f90 \
                open_files.f90 close_files.f90  \
                densities.f90 sum_fields.f90 dump_fields.f90 sum_radial.f90 \
                track_nc.f90 sum_fieldave.f90 \
                integrator.f90 abort.f90 push_nonrel.f90 \
	        error_test.f90 force_direct.f90 laser_hist.f90

# -------------------------------------------------------------------------------------------

# Names of application object files derived from sources
# Prefix added for multi-arch builds

appobjs = $(addprefix $(MACH)/, $(PPSRC.F90:.F90=.o)) \
	  $(addprefix $(MACH)/, $(SOURCES.f90:.f90=.o)) \
	  $(addprefix $(MACH)/, $(NCOBJS) )
visitobjs = $(addprefix $(MACH)/, $(VISIT.F90:.F90=.o) )
appmods =  $(addprefix $(MACH)/, $(MODULES.f90:.f90=.o))
mods = $(appmods)

all: dirs @TARGETS@
dirs: 	
	if [ ! -d $(MACH) ]; then mkdir $(MACH); fi
ifeq ($(SION),1)
	rm -f  $(MACH)/dump.o $(MACH)/predef_parts.o 
	ln -fs dump_sion.f90 dump.f90
	ln -fs predef_parts_sion.f90 predef_parts.f90
LIBS+=-L$(SION_LIB)
TARGET = $(PREFIX)/bin/pepcb_$(MACH)
else 
	rm -f  $(MACH)/dump.o $(MACH)/predef_parts.o 
	ln -fs dump_ascii.f90 dump.f90
	ln -fs predef_parts_ascii.f90 predef_parts.f90
TARGET = $(PREFIX)/bin/pepcb_$(MACH)_ascii      
endif

#  compile rules

$(MACH)/%.o: %.f90  
	$(FC) -c $(FFLAGS) $(DEFINES) $< -o $@

$(MACH)/%.o: %.F90  
	$(FC) -c $(FFLAGS) $(DEFINES) $< -o $@

#  explicit rules for f90 modules to avoid conflict with built-in ones
$(MACH)/physvars.o: physvars.f90
	$(FC) -c $(FFLAGS) $(DEFINES) physvars.f90 -o $@

$(MACH)/%.o: %.c  
	$(CC) -c $(CFLAGS) $< -o $@


# -----------------------------------------------------------------------------------------
#  targets

pepc:	lpepc $(appmods) $(appobjs) $(visitobjs) 
	@echo "\n Creating $(TARGET) ...\n"
	$(FC)  $(FFLAGS)  -o $(TARGET) $(appobjs) $(appmods) $(visitobjs) $(LIBS) $(LDFLAGS) 
	@echo "... done\n"

pepc-visit: lpepc $(appmods) $(appobjs) $(visitobjs) 
	@echo "\n Creating ../bin/pepcvis_$(MACH) ...\n"
	$(FC)  $(FFLAGS)  -o ../bin/pepcvis_$(MACH) $(appobjs) $(appmods) $(visitobjs) $(LIBS) $(LDFLAGS) 
	@echo "... done\n"

debug: lpepc $(appmods) $(appobjs) $(visitobjs) 
	@echo "\n Creating ../bin/pepc-debug_$(MACH) ...\n"
	$(FC)  $(FFLAGS)  -o ../bin/pepc-debug_$(MACH) $(appobjs) $(appmods) $(visitobjs) $(LIBS) $(LDFLAGS) 
	@echo "... done\n"

# Update PEPC library and headers
lpepc:  ../lpepcsrc/$(MACH)/liblpepc.a
#	cd ../lpepcsrc; make lpepc; cd ../pepc-b
	/bin/ln -sf $(PREFIX)/lpepcsrc/$(MACH)/treevars.mod $(PREFIX)/pepc-b/treevars.mod
	/bin/ln -sf $(PREFIX)/lpepcsrc/$(MACH)/utils.mod $(PREFIX)/pepc-b/utils.mod


rand:	 rantest.o
	$(FC) $(FFLAGS) -o rand rantest.o

clean:  cleanapp 

cleanapp:
	@echo "Cleaning application binaries .."; 
	/bin/rm -f $(MACH)/*.o $(MACH)/*.mod *.mod *% *~ *.o *.pif core $(MACH)/*.lst *.a *.mod opari.rc *.mod.F90 *.opari.inc

cleanpre: 
	@echo "Cleaning pre-processed .f90 files .."
	/bin/rm -f pepcb.f90 vis_*.f90

cleanvis:
	@echo "Cleaning visualization routines .."
	/bin/rm -f $(visitobjs)

cleancore: 	
	/bin/rm $(pepcobjs) 

cleandata: 
	/bin/rm -f fort.* *.dat *.out *.gle 

depend:
	$(F90DEP)

### DO NOT DELETE OR EDIT THIS LINE
# Everything from here on down is generated by f90depend
# so do NOT add any translation rules below here.

#--- Include-Dependencies
# Special dependencies
setup.o:	namelist.h
param_dump.o:   namelist.h
configure.o:	config_private.h
