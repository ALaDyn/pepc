#
#  Makefile for treemp and test programs
#

PREFIX = ..

#  Get machine-dependent flags

ARCH = ibm-p690
# ARCH = linux
# ARCH = bgl

include $(ARCH).mk


#  -----------------------------------------------------------------------------------------
#  You shouldn't need to edit anything below here unless you're adding new source code
#   - change machine/compiler options in the ARCH.mk file
#
#  -----------------------------------------------------------------------------------------

FFLAGS =  $(FFLAGS1) $(DB) $(Q64) $(PG) 
DFLAGS = $(FFLAGS1) $(DB) $(Q64)
PPFLAGS = -d  $(PREPROC)
LDFLAGS =  $(XNBODYLIBS) $(VISITLIBS) $(NETCDFLIB) $(MPITRACE) $(LIBS_MPI) $(LIBSF_MPI)
CFLAGS = $(CFLAGS1)

.SUFFIXES: .f90 .F90


# -------------------------------------------------------------------------------------------

# Source files

# -------------------------------------------------------------------------------------------

PPSRC.F90 = pepcb.F90 vis_parts_nbody.F90 vis_fields_nbody.F90 beam_control.F90


MODULES.f90 =   physvars.f90 

SOURCES.f90 =    \
                setup.f90 setup_arrays.f90 stamp.f90 \
                configure.f90 randion.f90 predef_parts.f90 maxwell1.f90 cold_start.f90 \
                special_start.f90 constrain.f90 cutvector.f90 face.f90 \
                scramble_v.f90 reset_ions.f90 add_electrons.f90 double_target.f90 \
                laser.f90 beam.f90 beam_dust.f90 rezone.f90\
                mc_config.f90 \
                velocities.f90 \
                energy_cons.f90 potenergy.f90 kinenergy.f90\
                force_laser.f90 \
                fpond.f90 empond.f90 emplane.f90 laser_bullet.f90 emoblique.f90 \
                push_em.f90 push_full3v.f90 \
                push.f90 reinject.f90 earth_plate.f90 add_ramp.f90 \
                vis_fields.f90 dump.f90 param_dump.f90 diagnostics.f90 \
                open_files.f90 close_files.f90  \
                densities.f90 sum_fields.f90 dump_fields.f90 \
                track_nc.f90 \
                integrator.f90 abort.f90 \
	        error_test.f90 force_direct.f90

# -------------------------------------------------------------------------------------------

# Names of application object files derived from sources

appobjs = $(PPSRC.F90:.F90=.o) $(SOURCES.f90:.f90=.o) ncnbody.o
appmods =  $(MODULES.f90:.f90=.o)
mods = $(appmods) $(pepcmods)

default: lpepc pepcb
pkojak: lpepc pepck  


#  preprocessor rules

.F90.o: 
	@echo "Preprocessing $<"
	$(FC) -c $(FFLAGS) $< $(PPFLAGS)

#  compile rules

.f90.o:   
	$(FC) -c $(FFLAGS) $(VISITLIBS) $(DBFLAGS) $<
.c.o:   
	$(CC) -c $(CFLAGS) -q64 $<



# -----------------------------------------------------------------------------------------
#  targets

pepcb:	$(appobjs) $(appmods) lpepc
	@echo "\n Creating pepcb ...\n"
	$(FC)  $(FFLAGS) $(LDFLAGS) $(LIBPEPC) $(IBMLIB) -o $@ $(appobjs) $(appmods) 
	@echo "... done\n"

debug: $(appobjs) $(appmods) lpepc
	@echo "\n Creating pepc_debug ...\n"
	$(FC)  $(DFLAGS) $(LDFLAGS) $(LIBPEPC) $(IBMLIB) -o pepc_debug $(appobjs) $(appmods) 
	@echo "... done\n"

pepcb_prod:	$(appobjs) $(appmods) lpepc
	@echo "\n Creating pepcb ...\n"
	$(FC)  $(FFLAGS) $(LDFLAGS) $(LIBPEPC) $(IBMLIB) -o $@ $(appobjs) $(appmods)
	@echo "... done\n"

# Update PEPC library and headers
lpepc:  
	@echo 'Copying machine options from $(ARCH).mk'
	cp $(ARCH).mk ../lpepcsrc/arch.mk
	cd ../lpepcsrc; make lpepc; cd ../pepc-b
	/bin/ln -sf $(PREFIX)/lpepcsrc/liblpepc.a $(PREFIX)/pepc-b/liblpepc.a
	/bin/ln -sf $(PREFIX)/lpepcsrc/*.opari.inc $(PREFIX)/pepc-b/.
	/bin/ln -sf $(PREFIX)/lpepcsrc/treevars.mod $(PREFIX)/pepc-b/treevars.mod
	/bin/ln -sf $(PREFIX)/lpepcsrc/utils.mod $(PREFIX)/pepc-b/utils.mod


pepck:	$(appobjs) $(appmods) $(pepcmods) liblpepc.a
	@echo "\n Creating pepc application binary ...\n"
	$(FC)  $(FFLAGS) $(LDFLAGS) $(LIBPEPC) -o $@ $(appobjs) $(appmods) $(pepcmods)
	@echo "... done\n"




rand:	 rantest.o
	$(FC) $(FFLAGS) -o rand rantest.o


clean:
	/bin/rm -f bin/*.o  F* *% *~ bin/key rand *.o *.pif core *.a *.mod opari.rc *.mod.F90 *.opari.inc

cleanlib: 
	cd ../lpepcsrc;	/bin/rm -f *.o *.mod.F90 *.opari.inc; cd -

cleancore: 	
	/bin/rm $(pepcobjs) 

cleandata: 
	/bin/rm -f fort.* *.dat *.out *.gle 

depend:
	$(F90DEP)

### DO NOT DELETE OR EDIT THIS LINE
# Everything from here on down is generated by f90depend
# so do NOT add any translation rules below here.

#--- Include-Dependencies

beam_control.o: /usr/lpp/ppe.poe/include/thread/mpif.h
configure.o: /usr/lpp/ppe.poe/include/thread/mpif.h
densities.o: /usr/lpp/ppe.poe/include/thread/mpif.h
dump.o: /usr/lpp/ppe.poe/include/thread/mpif.h
dump_fields.o: /usr/lpp/ppe.poe/include/thread/mpif.h
force_laser.o: /usr/lpp/ppe.poe/include/thread/mpif.h
kinenergy.o: /usr/lpp/ppe.poe/include/thread/mpif.h
mc_config.o: /usr/lpp/ppe.poe/include/thread/mpif.h
param_dump.o: namelist.h
pepcb.o: /usr/lpp/ppe.poe/include/thread/mpif.h
potenergy.o: /usr/lpp/ppe.poe/include/thread/mpif.h
predef_parts.o: /usr/lpp/ppe.poe/include/thread/mpif.h
rezone.o: /usr/lpp/ppe.poe/include/thread/mpif.h
setup.o: namelist.h
setup_arrays.o: /usr/lpp/ppe.poe/include/thread/mpif.h
track_nc.o: /usr/lpp/ppe.poe/include/thread/mpif.h
velocities.o: /usr/lpp/ppe.poe/include/thread/mpif.h
vis_fields.o: /usr/lpp/ppe.poe/include/thread/mpif.h
vis_parts.o: /usr/lpp/ppe.poe/include/thread/mpif.h
vis_parts_nbody.o: /usr/lpp/ppe.poe/include/thread/mpif.h


#--- Module-Dependencies

add_electrons.o: physvars.o
add_ramp.o: physvars.o
beam.o: physvars.o
beam_control.o: physvars.o
beam_dust.o: physvars.o
boundaries.o: physvars.o
close_files.o: physvars.o
configure.o: physvars.o
constrain.o: physvars.o
cutvector.o: physvars.o
densities.o: physvars.o
diagnostics.o: physvars.o
double_target.o: physvars.o
dump.o: physvars.o
dump_fields.o: physvars.o
earth_plate.o: physvars.o
energy_cons.o: physvars.o
face.o: physvars.o
force_laser.o: physvars.o
forces.o: physvars.o
integrator.o: physvars.o
kinenergy.o: physvars.o
laser.o: physvars.o
mc_config.o: physvars.o
open_files.o: physvars.o
param_dump.o: physvars.o
pepcb.o: physvars.o
potenergy.o: physvars.o
predef_parts.o: physvars.o
push.o: physvars.o
push_em.o: physvars.o
push_full3v.o: physvars.o
randion.o: physvars.o
reset_ions.o: physvars.o
rezone.o: physvars.o
scramble_v.o: physvars.o
setup.o: physvars.o
setup_arrays.o: physvars.o
special_start.o: physvars.o
sum_fields.o: physvars.o
track_nc.o: physvars.o
velocities.o: physvars.o
vis_domains_nbody.o: physvars.o
vis_fields.o: physvars.o
vis_parts.o: physvars.o
vis_parts_nbody.o: physvars.o


