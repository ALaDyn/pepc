# this makefile is for cross-compiling from the JURECA cluster side

MOD_LOAD  = GCC ParaStationMPI
# you really want to use the ParaStationMPI/*-mt version of the module

HELP = "========  Makefile for GCC\\n== recommended module commands\\nmodule load Architecture/KNL\\nmodule load $(MOD_LOAD)\\n=="

MACH     = JURECA_booster_gcc

DEBUG    = 0
OMP      = 1
NOINLINE = 0

MAKE     = make

CPP      = mpicc
CPPFLAGS = -E -x c -P -C -ffreestanding
                       # ^----- this prevents errors due to nasty automatic pre-inclusion of stdc-predefs.h when using cpp for fortran code

CCPRE    =
CC       = mpicc

FCPRE    =
FC       = mpif90

LDPRE    =
LD       = mpif90

LDLIBS   =

RANLIB   = gcc-ranlib

AR       = gcc-ar
ARFLAGS  = -rs

RM       = rm -rf

INLINING = -flto -fuse-linker-plugin -fipa-matrix-reorg

# solve the following issue with lto:
#`walk_worker_thread' referenced in section `.text' of /tmp/ccB14zE9.lto.o: defined in discarded section `.text' of module_walk_pthreads.o (symbol from plugin)
#`walk_worker_thread' referenced in section `.rodata' of /tmp/ccB14zE9.lto.o: defined in discarded section `.text' of module_walk_pthreads.o (symbol from plugin)
#`run_communication_loop' referenced in section `.rodata' of /tmp/ccB14zE9.lto.o: defined in discarded section `.text' of module_tree_communicator.o (symbol from plugin)
INLINING += -u run_communication_loop -u walk_worker_thread

FWARNINGS = -Wall -Wsurprising -Wintrinsic-shadow -Wfunction-elimination -Wconversion -Warray-temporaries -Wcharacter-truncation -Wline-truncation -Wrealloc-lhs-all
FFEATURES = -frecursive -fimplicit-none -ffree-line-length-none -fcoarray=none -fsign-zero
FARCH = -mfma -mavx512f -mavx512cd -mavx512er -mavx512pf -mtune=knl -march=knl -malign-data=cacheline

ifeq ($(NOINLINE), 1)
   INLINING =
endif
ifeq ($(DEBUG), 1)
  FFLAGS   = -Og -g -gdwarf-3 -gstrict-dwarf \
    -fcheck=all -frange-check -fbacktrace -fvar-tracking \
    $(FFEATURES) \
    $(FWARNINGS) \
    $(FARCH)
  CFLAGS   = -Og -g -gdwarf-3 -gstrict-dwarf -pthread -Wall $(FARCH)
  LDFLAGS  = -Og -g -gdwarf-3 -gstrict-dwarf -pthread
else
  FFLAGS   = -Ofast \
    $(INLINING) \
    $(FFEATURES) \
    $(FWARNINGS) \
    $(FARCH)
  CFLAGS   = -Ofast -pthread -Wall $(INLINING) $(FARCH)
  LDFLAGS  = -Ofast -pthread $(INLINING)
  CPPFLAGS += -DNDEBUG
endif

ifeq ($(OMP), 1)
  FFLAGS   += -fopenmp
  LDFLAGS  += -fopenmp
else
endif


COMPILER = $(shell $(FC) --version | head -n 1)
