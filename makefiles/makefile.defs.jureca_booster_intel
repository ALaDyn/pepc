# this makefile is for cross-compiling from the JURECA cluster side

MOD_LOAD  = Intel ParaStationMPI
# you really want to use the ParaStationMPI/*-mt version of the module

HELP = "========  Makefile for Intel compiler\\n== recommended module commands\\nmodule load $(MOD_LOAD)\\n=="

MACH     = JURECA_booster_intel

DEBUG    = 0
OMP      = 1

MAKE     = make

CPP      = cpp
CPPFLAGS = -P -C -D__INTEL_COMPILER -ffreestanding
                                    # ^----- this prevents errors due to nasty automatic pre-inclusion of stdc-predefs.h when using cpp for fortran code

CCPRE    =
CC       = mpicc

FCPRE    =
FC       = mpif90

LDPRE    =
LD       = mpif90

LDLIBS   =

RANLIB   = ranlib

AR       = xiar
ARFLAGS  = -rs

RM       = rm -rf

#OPTIMIZATION = -Ofast -xHost -finline -finline-functions -ipo-separate UBBEARABLY SLOW TO COMPILE
OPTIMIZATION = -O3 -axMIC-AVX512 -finline -finline-functions -ipo

ifeq ($(DEBUG), 1)
  FFLAGS   = -g -O0 -warn all -reentrancy threaded -CA -CB -CU -fsource-asm
  CFLAGS   = -g -O0
  LDFLAGS  = -g -O0 -warn all -reentrancy threaded 
else
  FFLAGS   = -warn all $(OPTIMIZATION) -reentrancy threaded
  CFLAGS   =           $(OPTIMIZATION)
  LDFLAGS  = -warn all $(OPTIMIZATION) -reentrancy threaded 
  CPPFLAGS += -DNDEBUG
endif

ifeq ($(OMP), 1)
  FFLAGS   += -qopenmp
  LDFLAGS  += -qopenmp
else
endif

COMPILER = $(shell $(FC) --version | head -n 1)
