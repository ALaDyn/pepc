MACH     = IBM-BGP-jugene

DEBUG    = 0
VAMPIR   = 0
SION     = 1
RANLIB   = ranlib

MAKE     = gmake

AR       = ar
ARFLAGS  = -rs

CPP      = cpp
CPPFLAGS = -P -C -DLITTLEENDIAN

OPTIMIZATIONFLAGS_DEBUG = -O0 -g -qfullpath -qcheck -qkeepparm -qflttrap -qnosmp -qxflag=dvz -Q! -qnounwind -qnounroll
OPTIMIZATIONFLAGS       = -O3 -qhot -qipa -qipa=list=long:threads=auto \
                                 -qipa=inline=limit=12000:inline=threshold=12000:level=1 \
                                 -Q+__tree_walk_communicator_NMOD_run_communication_loop_inner:__tree_walk_utils_NMOD_walk_single_particle:__module_htable_NMOD_get_next_node:__module_htable_NMOD_key2addr:__module_htable_NMOD_make_hashentry:rwlocks_unlock:rwlocks_unlock_:rwlocks_wrlock:rwlocks_wrlock_:rwlocks_rdlock:rwlocks_rdlock_:__module_calc_force_NMOD_calc_force_per_particle:__module_math_tools_NMOD_div_by_fac:__tree_walk_communicator_NMOD_unpack_data:__tree_walk_utils_NMOD_get_first_unassigned_particle:__tree_walk_communicator_NMOD_send_requests:__tree_walk_communicator_NMOD_send_data

STANDARDFLAGS           = -qtune=450 -qarch=450 -qthreaded -qsmp=noauto

ifeq ($(DEBUG), 1)
  FFLAGS   = $(STANDARDFLAGS) $(OPTIMIZATIONFLAGS_DEBUG) -qxlf2003=polymorphic -qddim
  CFLAGS   = $(STANDARDFLAGS) $(OPTIMIZATIONFLAGS_DEBUG)
  LDFLAGS  = $(STANDARDFLAGS) $(OPTIMIZATIONFLAGS_DEBUG)
else
  FFLAGS   = $(STANDARDFLAGS) $(OPTIMIZATIONFLAGS) -qxlf2003=polymorphic
  CFLAGS   = $(STANDARDFLAGS) $(OPTIMIZATIONFLAGS)
  LDFLAGS  = $(STANDARDFLAGS) $(OPTIMIZATIONFLAGS)
endif

ifeq ($(VAMPIR), 1)
  FCPRE    = bgvtf90 -vt:f90
  CCPRE    = bgvtcc  -vt:cc
  LDPRE    = bgvtf90 -vt:f90
else
  FCPRE    = 
  CCPRE    =
  LDPRE    =
endif


FC       = mpixlf90_r
CC       = mpixlc_r
CFLAGS_NOOPT = -D_BGP $(STANDARDFLAGS) $(OPTIMIZATIONFLAGS_DEBUG) -I/bgsys/drivers/ppcfloor/arch/include

LD       = mpixlf90_r

#TOTALVIEW_LIB = -L/bgsys/local/totalview/toolworks/totalview.8.8.0-1/linux-power/lib/ -ltvheap_bluegene

#IHPCT_BASE=/bgsys/local/ihpct
#HPCCOUNT_LIB = -L../hpccount/lib -lhpccnt -L$(IHPCT_BASE)/lib -lhpc -llicense $(IHPCT_BASE)/lib/fake_dlfcn.o $(IHPCT_BASE)/lib/average.o

LDLIBS   = -lxlf90 -lxlopt -lxlsmp -lpthread -lm -lc $(TOTOALVIEW_LIB) $(HPCCOUNT_LIB)

#  Flags for sionlib I/O option
ifeq ($(SION),1)
  CPPFLAGS += -DSION  # Preprocessor
  LDLIBS += `sionconfig --libs --mpi -be`
  CFLAGS += `sionconfig --cflags --for --mpi -be`
endif

RM       = rm -rf

EXECNAME = ../pepc

