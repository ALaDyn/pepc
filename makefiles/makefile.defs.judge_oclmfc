# call before compilation to activate GNU Compiler Collection instead of Intel compiler:
#  > module unload intel
#  > module unload parastation
#  > module load parastation/mpi2-gcc-mt-5.0.26-1
#  > module load GCC

MOD_UNLOAD = intel parastation mkl
MOD_LOAD   = OMPSS ompss/git-version cuda extrae GCC

HELP = "\
\# Makefile for JUDGE using gcc and OmpSs\n\
\# recommended module commands\n\
module purge; module load $(MOD_LOAD)\
"

######################################
#### uncomment to get OpenMP loop ####
#EXTRA = -DOMPSS_TASKS_

#### -DOMPSS_TASKS will enable tasks instead of pthreads

######################################

OMPSS      = 1
OMPSSCC    = oclmfc

MACH       = oclmfc

DEBUG      = 1
INSTRUMENT = 0
MONITOR    = 0

RANLIB     = ranlib

MAKE       = make

AR         = ar
ARFLAGS    = -rs

CPP        = cpp
CPPFLAGS   = -P -C $(EXTRA) -DOMPSS_TASKS

FCPRE      = 
FC         = mpif90

CCPRE      = 
CC         = mpicc

LDPRE      = 
LD         = mpif90
LDLIBS     =

FFLAGS     = -Wall -ffree-line-length-none -fopenmp -frecursive
CFLAGS     = -Wall
LDFLAGS    = -pthread -fopenmp
ifeq ($(DEBUG), 1)
  FFLAGS  += -g -k -fcheck=all
  CFLAGS  += -g
  LDFLAGS += -g -k -fcheck=all
else
  FFLAGS  += -O3 -g
  CFLAGS  += -O3 -g
  LDFLAGS += -O3 -g
endif

ifeq ($(OMPSS), 1)
   FFLAGS    = --Wn,-Wall,-ffree-line-length-none,-fopenmp,-frecursive --ompss --variable=disable_final_clause_transformation:1 --opencl
   CFLAGS    = -Wall -DOMPSS_TASKS
   LDFLAGS   = --Wn,-pthread,-fopenmp --ompss --opencl
   ifeq ($(DEBUG), 1)
      FFLAGS  += -g -k --Wn,-O0 --Wn,-fcheck=all
      CFLAGS  += -g
      LDFLAGS += -g -k --Wn,-O0 --Wn,-fcheck=all
   else
      FFLAGS  += -g -k --Wn,-O3,-finline-functions,-ftree-vectorize,-fdump-ipa-inline#,-fwhole-program
      CFLAGS  += -g                                                                                   
      LDFLAGS += -g -k --Wn,-O3,-finline-functions                                   #,-fwhole-program
   endif
   FC += -f90=$(OMPSSCC)
   LD += -f90=$(OMPSSCC)
   ifeq ($(INSTRUMENT), 1)
      FFLAGS  += --instrument
      CFLAGS  +=
      LDFLAGS += --instrument
   endif
   ifeq ($(MONITOR), 1)
      CPPFLAGS += -DMONITOR
      LDFLAGS  += -L/usr/local/OmpSs/packages/extrae/2.4.1-parastation-papi/lib -lnanostrace
   endif
else
   CPPFLAGS += -DNO_NANOS
endif
#   CPPFLAGS += -DNO_NANOS

#FFLAGS += -S -dA

RM       = rm -rf

COMPILER = $(shell $(FC) --version | head -n 1)

