 HELP = ""

MACH     = cray_gcc-4.8

DEBUG    = 1
OMP      = 1

RANLIB   = ranlib

MAKE     = make

AR       = ar
ARFLAGS  = -rs

CPP      = cc
CPPFLAGS = -E -x c -P -C -ffreestanding
                       # ^----- this prevents errors due to nasty automatic pre-inclusion of stdc-predefs.h when using cpp for fortran code

INLINING = -fdump-ipa-inline -finline-functions-called-once -fearly-inlining -findirect-inlining -mstringop-strategy=unrolled_loop -flto-partition=none -finline-limit=120000 --param large-function-insns=120000 --param large-unit-insns=120000 --param large-function-growth=1000 --param inline-unit-growth=1000 --param max-inline-insns-recursive-auto=120000 --param max-inline-recursive-depth-auto=500 -fipa-matrix-reorg
# -flto
#-fwhopr

FCPRE    =
FC       = ftn
ifeq ($(DEBUG), 1)
  FFLAGS   = -Wall -O0 -g -gdwarf-3 -fcoarray=none -frecursive -ffree-line-length-none -frange-check -fbacktrace -fvar-tracking -pthread -C -Wconversion -fimplicit-none -Wcharacter-truncation -Wline-truncation -Wsurprising -Wfunction-elimination -Wrealloc-lhs-all -Wcompare-reals -fbacktrace -fcheck=all
  CFLAGS   = -Wall -O0 -g -gdwarf-3
  LDFLAGS  =       -O0 -g -gdwarf-3
else
  FFLAGS   = -Wall -O5 -fcoarray=none -frecursive  -ffree-line-length-none -fsign-zero -fno-protect-parens -faggressive-function-elimination $(INLINING)
  CFLAGS   = -Wall -O5
  LDFLAGS   = -pthread -O5 $(INLINING) -fwhole-program
#-Wl,--threads
#-fuse-linker-plugin
endif

ifeq ($(OMP), 1)
  FFLAGS   += -fopenmp
  LDFLAGS  += -fopenmp
else
endif

CCPRE    =
CC       = cc

LDPRE    =
LD       = ftn
LDLIBS   =

RM       = rm -rf

COMPILER = $(shell $(FC) --version | head -n 1)

