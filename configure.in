#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
#
m4_include([acx_mpi.m4]) dnl MPI support

AC_PREREQ(2.59)
AC_INIT(pepc, 1.4, P.Gibbon@fz-juelich.de)
AC_CONFIG_SRCDIR([config.h.in])
AC_CONFIG_HEADER([config.h])

AC_CONFIG_AUX_DIR([src-config])

#######################################################################
# special paths for systems in juelich
#######################################################################
CFLAGS="$CFLAGS -I/usr/local/include"

if [[ `uname -n` = "jubl" ]] # jubl in Juelich
then
 CFLAGS="$CFLAGS -I/bgl/local/include -I\$(BGLSYS)/include "
# LDFLAGS="$LDFLAGS -L/bgl/local/lib   -L\$(BGLSYS)/lib" 
# FFLAGS="$FFLAGS -I/bgl/local/include -I\$(BGLSYS)/include "
# DEFAULT_TRACEPATH="-L/bgl/local/lib -lmpitrace_f"  # MPI only
 DEFAULT_TRACEPATH="-L/bgl/local/hpct_bgl/lib -lmpitrace -lhpm.rts -llicense"  # MPI+HPM - needs 'module load hpct'
 MACH=bgl

elif [[ `uname -n` = "jugene1" ]] # JuGene in Juelich
then
  BGPSYS=/bgsys/drivers/ppcfloor
  INCLUDE_MPI="-I$BGPSYS/comm/include"
  DIR_MPI="-L$BGPSYS/comm/lib -L$BGPSYS/runtime/SPI"
#  CFLAGS="$CFLAGS  -I$INCLUDE_MPI"
#  LDFLAGS="$LDFLAGS $DIR_MPI" 
#  FFLAGS="$FFLAGS -I$INCLUDE_MPI"
  LIBS_MPI="$DIR_MPI -lmpich.cnk -ldcmfcoll.cnk -ldcmf.cnk -lpthread -lrt -lSPI.cna"
#  DEFAULT_TRACEPATH="-L/bgl/local/lib -lmpitrace_f"
  MACH=bgp
#  MPIF90=bgxlf90
#  MPICC=bgxlc
  MPIF90=mpxlf90
  MPICC=mpcc

elif [[ `uname -m` = "00223C3B4C00" ]] # jump in Juelich
then
  MACH=p690

elif [[ `uname -m` = "i686" ]] # laptop
then
 MACH=linux

fi

#  Visit libraries

if [[ `uname -m` = "00223C3B4C00" ]] # jump in Juelich
then
  DEFAULT_VISITPATH="-L/usr/local/beta/visit-2.0b/lvisit/apis/nbody3 -llvisit_nbody2 \
                     -L/usr/local/beta/visit-2.2/lvisit/lib -llvisit \
                     -L/usr/local/beta/visit-2.2/lib -lvisit" 

elif [[ `uname -n` = "jubl" ]] # jubl in Juelich
then
  DEFAULT_VISITPATH="-L/bgl/local/visit.rts/apis/nbody3 -llvisit_nbody2 \
                     -L/bgl/local/visit.rts/lvisit/lib -llvisit \
                     -L/bgl/local/visit.rts/lib -lvisit" 

elif [[ `uname -m` = "i686" ]] # laptop
then
  VPREFIX=/tmp/xnbody
  DEFAULT_VISITPATH="-L/tmp/xnbody/xnbody_qt4/apis/nbody3 -llvisit_nbody2 \
                     -L/tmp/xnbody/lvisit/lib -llvisit \
                     -L/tmp/xnbody/visit_dist/lib -lvisit"
fi

#AC_SUBST(LIBS_MPI) 


#######################################################################
# determine host type and write to stdout
# set system specific options
#######################################################################
AC_CANONICAL_HOST  dnl get $host value
 
case "$host" in

#=====================================================================
powerpc64-unknown-linux-gnu) # jubl
 AC_MSG_RESULT(** setting options for powerpc64 host **)
 CFLAGS_OS="-DAIX_XLF -qarch=440 -qtune=440 -qlibansi -qnoinfo "
 FFLAGS_f77_f90="-WF,-DHAVE_PRIVATE_CONFIGS -qarch=440 -qtune=440 -qnosave"
 F90DEF="-WF,"
 FFLAGS_OS="$FFLAGS_f77_f90 -qsuffix=f=f90 -qsuffix=cpp=F90"
 MODULE_FLAG="-qmoddir="
 F77FLAGS="$FFLAGS_f77_f90 -qsuffix=f -qfixed -qspillsize=32000"
 CLINK_FLAGS="-qarch=440 -qtune=440"
 if [[ -z "$OPT" ]]; then OPT=-O3; fi
 AR="ar -q"
 # 
 TUNE="-qarch=pwr4 -qtune=pwr4"
  ;;

#=====================================================================

*-*-aix*)
 AC_MSG_RESULT(** setting options for Aix host **)
# CFLAGS_OS="-DJUMP -DAIX_XLF -q64 -qlibansi -qnoinfo "
 CFLAGS_OS="-q64 -qlibansi -qnoinfo "
 F90DEF="-WF,"
# FFLAGS_OS="-WF,-DJUMP,-DAIX_XLF -q64 "
 FFLAGS_OS="-q64 -WF,-DHAVE_PRIVATE_CONFIGS"
 #FFLAGS_OS="-q64 "
 IPA="-qipa=inline=key2addr -qipa=inline=make_hashentry -qipa=inline=key2node -qipa=inline=next_node"
 MODULE_FLAG="-qmoddir="
 F77FLAGS="$FFLAGS_OS -qnosave -qspillsize=32000"
 FLINK_FLAGS="-q64"
 CLINK_FLAGS="-q64"
 if [[ -z "$OPT" ]]; then OPT=-O3; fi
 AR="ar -q -X64"
  ;;

#=====================================================================

*-*-linux-gnu*)
 AC_MSG_RESULT(** setting options for Linux host with ifort compiler **)
 CFLAGS_OS="-Wall -Wno-unused"
 MODULE_FLAG="-module "
 F77FLAGS="$FFLAGS_OS"
 FLINK_FLAGS="-nofor_main"
 CLINK_FLAGS=""
 if [[ -z "$OPT" ]]; then OPT=-O3; fi
 AR="ar -q"
  ;;
*)
 AC_MSG_ERROR(** unknown host: $host **)
   ;;
esac

#######################################################################
# extra configure options
#######################################################################

AC_LANG(C)
#AC_PROG_FC
#AC_LANG(Fortran) dnl error, no fortran???

# set mpi path manually
AC_ARG_WITH(mpi,  [  --with-mpi=DIR          path to mpi installation directory],        
[                                                                  
   MPI_DIR=${withval} 
])
AC_SUBST(MPI_DIR) 

# search mpi installation
ACX_MPI(,AC_MSG_ERROR(mpi is not available => use --with-mpi=DIR))

# default for visit is no
AC_ARG_WITH(visit,[  --with-visit            use visit libraries (no)],
  if test "$withval" != "no" ; then
# turn on preprocessor directive
     VISITDEF="${F90DEF}-DVISIT_NBODY"
# visit, xnbody path defaults 
     VISITLIBS="${DEFAULT_VISITPATH}" 
     TARGETS=pepc-visit 
     if test "$withval" != "yes" ; then
# user-defined path
       VISIT=-L${withval}
     fi
  else 
     TARGETS=pepc
  fi
  ,TARGETS=pepc
)


# set path to lvisit
AC_ARG_WITH(lvisit,
	[  --with-lvisit=DIR       path to lvisit library], 
	[LVISIT=-L${withval}])

# default for netcdf is no
AC_ARG_WITH(netcdf,[  --with-netcdf           use netcdf library (no)],
  if test "$withval" != "no" ; then
# turn on preprocessor directive
    NETCDFDEF="${F90DEF}-DNETCDFLIB"
# netcdf path defaults 
    NETCDFLIB=-lnetcdf
# compile netcdf interface
    NCOBJS=ncnbody.o
    if test "$withval" != "yes" ; then
# user-defined path
       NETCDFLIB="-L${withval}/lib -lnetcdf"
       CFLAGS=-I${withval}/include
    fi
  fi
)


AC_SUBST(VISIT) 
AC_SUBST(VISITDEF)
AC_SUBST(VISITLIBS)
AC_SUBST(LVISIT) 
AC_SUBST(NETCDFDEF) 
AC_SUBST(NETCDFLIB) 
AC_SUBST(NCOBJS) 
AC_SUBST(TARGETS)


# set path to visit (only show option, do nothing)
AC_ARG_WITH(visit,[  --with-visit=DIR        path to visit library],[])
AC_ARG_WITH(netcdf,[  --with-netcdf=DIR       path to netcdf library],[])


# set path to xnbody
AC_ARG_WITH(xnbody,
	[  --with-xnbody=DIR       path to xnbody library], 
	[XNBODY=-L${withval}])
AC_SUBST(XNBODY) 


# set optimization options
AC_ARG_WITH(opt,
	[  --with-opt=options      compiler optimization options], 
	[OPT=${withval}])
AC_SUBST(OPT) 

# set MPI trace library options
AC_ARG_WITH(mpitrace,
	[  --with-mpitrace         MPI trace library], 
  if test "$withval" != "no" ; then
        MPITRACE="${DEFAULT_TRACEPATH}"
     if test "$withval" != "yes" ; then
       MPITRACE=${withval}
     fi
  fi
) 
AC_SUBST(MPITRACE) 

#MPITRACE = -L/bgl/local/lib -lmpitrace_f # MPI only

# default for debug is no
AC_ARG_WITH(debug,[  --with-debug            produce debug library (no)],
  case "$withval" in
  yes[)]
    DEBUGDEF=-DDEBUG 
    OPT="-g"
    ;;
  *[)]
    DEBUGDEF=
    ;;
  esac
  ,DEBUGDEF=
)
AC_SUBST(DEBUGDEF)

#######################################################################

# Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET

# Checks for libraries.
# AC_CHECK_LIB([fftw3], [fftw_malloc],[],AC_MSG_ERROR(fftw3 is missing))
AC_CHECK_LIB([m], [sqrt])

# Checks for header files.
AC_HEADER_STDC
#AC_CHECK_HEADERS([fftw3.h float.h inttypes.h limits.h stddef.h stdlib.h string.h strings.h unistd.h],[],[AC_MSG_ERROR(include file is missing)])
#AC_CHECK_HEADERS([float.h inttypes.h limits.h stddef.h stdlib.h string.h strings.h unistd.h],[],[AC_MSG_ERROR(include file is missing)])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_CHECK_FUNCS([atexit floor memset pow rint sqrt])

# Compiler flag substitutions
AC_SUBST(MACH) 
#AC_SUBST(BGPSYS)
#AC_SUBST(MPIF90)
#AC_SUBST(MPICC)
AC_SUBST(FFLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(CFLAGS_OS)
AC_SUBST(FFLAGS_OS)
AC_SUBST(MODULE_FLAG)
AC_SUBST(F77FLAGS)
AC_SUBST(FLINK_FLAGS)
AC_SUBST(CLINK_FLAGS)
AC_SUBST(OPT)
AC_SUBST(AR)

###
 
AC_CONFIG_FILES([makefile
                 lpepcsrc/makefile
                 pepc-b/makefile
                 pepc-e/makefile
                 ])
AC_OUTPUT




















