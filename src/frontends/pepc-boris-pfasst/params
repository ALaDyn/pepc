&pepcborispfasst

  ! initial particle setup
  ! 0 --> one single lonely particle at a position given by PARAMS_X0, _Y0, _Z0 with velocities _VX0, _VY0, _VZ0
  ! 1 --> N=numparts particles randomly around a position given by PARAMS_X0, _Y0, _Z0 with velocities _VX0, _VY0, _VZ0
  ! 2 --> N=numparts particles randomly (box size RADIUS, velocity spread VELOCITY_SPREAD)
  particle_config = 2
  ! number of particles for particle_config=1
  numparts=500
  
  ! dumptype
  ! 0 - no particle dump
  ! 1 - dump particle trajectory to fort.XX
  ! 2 - dump particle trajectory to particles.timeseries.vtk
  ! 3 - dump average particle trajectory to fort.2XX
  ! 4 - same as 2 and 3
  dumptype = 4
  
  ! physics parameters
  !              X0    Y0   Z0   VX0    VY0  VZ0    OMEGAE  OMEGAB  RADIUS  VELOCITY_SPREAD
  setup_params = 10.0  0.0  0.0  100.0  0.0  100.0  4.9     25.0    0.1    5.0

  ! choice of integrator  
  ! 1  - WM_BORIS
  ! 2  - WM_BORIS_SDC_REF (ignores nlevels, i.e. sets it to 1 and only uses first entry in level-dependent params)
  ! 3  - WM_ANALYTIC
  ! 4  - WM_CYCLOTRONIC
  ! 5  - WM_BORIS_PATACCHINI
  ! 6  - WM_BORIS_LEAP_FROG
  ! 7  - WM_BORIS_TANALPHA
  ! 8  - WM_TAJIMA_LEAP_FROG_IMPLICT
  ! 9  - WM_TAJIMA_LEAP_FROG_EXPLICT 
  ! 10 - WM_MATRIX_VERLET
  ! 11 - WM_CYCLOTRONIC_NOTAN
  ! 12 - WM_BORIS_PATACCHINI_NOTAN
  ! 13 - WM_BORIS_MLSDC
  ! 14 - WM_BORIS_SDC (the same as WM_BORIS_SDC, just to produce a different set of results and keep the original data)
  workingmode = 14
/

&pfasst
  ! physical simulation end time (in fs)
  tend    = 16.0
  
  nsteps  = 512
  niter   = 4
  nlevels = 2
  
  ! SDC node type
  ! 1 - SDC_GAUSS_LOBATTO
  ! 2 - SDC_GAUSS_RADAU
  ! 3 - SDC_CLENSHAW_CURTIS
  ! 4 - SDC_UNIFORM
  ! 5 - SDC_GAUSS_LEGENDRE
  ! 2**8  - SDC_PROPER_NODES
  ! 2**9  - SDC_COMPOSITE_NODES
  ! 2**10 - SDC_NO_LEFT
  qtype = 1
  
  ! level parameters (one entry per level and line, finer levels are more left, coarser levels more right)
  nsweeps = 1 1
  nnodes  = 5 5
  ! true  --> evaluate forces directly: O(N**2) but exact
  ! false --> evaluate forces with PEPC: O(N log N) but multipole approximation
  directforce = .true. .true.
  ! 1st digit: 0 - no external field, 1 - full external field
  ! 2nd digit: 0 - no internal field, 1 - full internal field
  feval_mode = 11 11
  ! multipole acceptance parameter
  theta   = 0.5 0.5
  ! end of level parameters
  
  res_tol = 1.e-99
  
  num_space_instances = 1
  color_space_div     = .true.
  color_time_div      = .true.
  
  ! create fort.601 files with timings
  echo_timings        = .false.
  ! unused
  echo_errors         = .true.
/

&libpepc
 ! number of additional threads
 num_threads = 8
 ! debug level bitmask
 ! 0 --> no debug output
 ! 1 --> print status
 ! see module_debug.f90 for more options
 debug_level = 0

 ! load balancing
 ! 0 --> no load balancing
 ! 1 --> load balancing active
 weighted = 1

 ! type of space-filling curve
 ! 0 --> Z-curve
 ! 1 --> Hilbert-curve
 curve_type = 1
 
 ! internal memory allocation parameters
 np_mult = 1.0
 interaction_list_length_factor = 4
/

&walk_para_pthreads
  max_particles_per_thread = 500
/

&calc_force_coulomb
  ! square of plummer potential screening parameter
  eps2 = 0.05
/
