LIBNAME     = $(MYROOT)$(LIBDIR)l$(FRONTENDNAME).a
PEPCUTILS   = $(MYROOT)$(UTILSDIR)
BUILDDIR    = $(MACH)/$(BACKEND)/
EXECNAME    = $(MYROOT)$(BINDIR)$(FRONTENDNAME)
LIBRARIES   = $(LIBNAME) $(MYROOT)$(LIBDIR)libpepc.$(BACKEND).a $(MYROOT)$(LIBDIR)libpthreads.a $(MYROOT)$(LIBDIR)libsl.a

.SUFFIXES: .f90

# Names of application object files derived from sources
# Prefix added for multi-arch builds
SOURCES = $(SOURCES.f90) $(SOURCES.UTILS.f90)
OBJS = $(addprefix $(BUILDDIR)/, $(SOURCES:.f90=.o))
SOURCES.UTILSP.f90 = $(addprefix $(PEPCUTILS)/, $(SOURCES.UTILS.f90))

default: all
all: $(BUILDDIR)
	$(MAKE) $(MFLAGS) $(EXECNAME)
	@echo "************* Successfully built $(EXECNAME) :-) ****************"

$(BUILDDIR): 
	mkdir -p $(BUILDDIR)

# preprocess files and put into $(BUILDDIR) subdir
# then compile form there
# touch module files after compilation so that the are newer than the .o files
# this prevents make from trying to rebuild them again and again
# we keep the preprocessed files for easier debugging / correct line information etc.
$(BUILDDIR)/%.o: %.f90
	$(CPP) $(CPPFLAGS) $< $(BUILDDIR)/$<
	cd $(BUILDDIR) ; $(FCPRE) $(FC) -c $(FFLAGS) $(DBFLAGS) $< -o $(<:.f90=.o)

$(BUILDDIR)/%.o: $(PEPCUTILS)/%.f90
	$(CPP) $(CPPFLAGS) $< $(BUILDDIR)/$(<F)
	cd $(BUILDDIR) ; $(FCPRE) $(FC) -c $(FFLAGS) $(DBFLAGS) $(<F) -o $(<F:.f90=.o)

# special rules for "external" modules
$(BUILDDIR)/%.mod:
	ln -sf ../../$(MYROOT)$(LPEPCDIR)$(BUILDDIR)$(@F) $@

# final rule for executable
$(LIBNAME): $(OBJS)
	$(RM) $(LIBNAME)
	$(AR) $(ARFLAGS) $(LIBNAME) $^
	$(RANLIB) $(LIBNAME)

$(EXECNAME): $(LIBRARIES)
	$(LDPRE) $(LD) $(LDFLAGS) -o $(EXECNAME) $+ $(LDLIBS)


clean:
	$(RM) $(BUILDDIR)/*.o  *% *~ bin/key rand *.o *.pif core *.mod $(BUILDDIR)/*.mod module.deps $(LIBNAME) $(EXECNAME)
	$(RM) -rf $(MACH)

module.deps:
	$(MYROOT)$(F90MODDEPS) -o $@ --dep-template "\1.mod" --mod-template "\1.mod" --o-prefix "\$$(BUILDDIR)/" $(SOURCES.f90) $(SOURCES.UTILSP.f90)

include module.deps
