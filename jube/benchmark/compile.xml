<compilation>

<!-- predefined vars:
   $outdir -> output directory for temporary compile files
   $id     -> identifier of this benchmark run
-->

<!-- ********************************************************** -->

<compile cname="Intel-Nehalem-JuRoPA">
    <!-- Specification of source files to copy into temporary build
         directory -->
    <src directory="./../.." files="makefile makefiles/makefile.defs.jube 
				    lpepcsrc sl_pepc pepc-e tools" />

    <!-- Create makefile.defs and substitute parameters -->
    <substitute infile="makefile.defs.jube" outfile="makefile.defs">
        <sub from="#ARCH#"          to="$platform" />
	<sub from="#MAKE#"          to="$make" />
	<sub from="#RANLIB#"        to="$ranlib" />
	<sub from="#AR#"            to="$ar" />
        <sub from="#ARFLAGS#"       to="$arflags" />
	<sub from="#RM#"            to="$rm" />
        <sub from="#CPP#"           to="$cpp" />
        <sub from="#CPPFLAGS#"      to="$cppflags -C "/>
        <sub from="#CCPRE#"         to=" " />
	<sub from="#MPI_CC#"        to="$mpi_cc" />
        <sub from="#CFLAGS#"        to="$cflags $optflags" />    
        <sub from="#FCPRE#"         to=" " />
	<sub from="#MPI_F90#"       to="$mpi_f90" />
        <sub from="#F90FLAGS#"      to="$f90flags $optflags" />    
        <sub from="#LDPRE#"         to=" " />
        <sub from="#LD#"            to="$mpi_f90" />
        <sub from="#LDFLAGS#"       to="$ldflags $optflags" />
        <sub from="#LDLIBS#"        to="" />
	<sub from="#EXECNAME#"      to="$execname" />
    </substitute>

    <!-- issue build command -->
    <command>(module load intel parastation/intel; make)</command>
    
</compile>

<!-- ********************************************************** -->

<compile cname="IBM-BGP-Jugene">
    <!-- Specification of source files to copy into temporary build
         directory -->
    <src directory="./../.." files="makefile makefiles/makefile.defs.jube 
				    lpepcsrc sl_pepc pepc-e tools" />

    <!-- Create makefile.defs and substitute parameters -->
    <substitute infile="makefile.defs.jube" outfile="makefile.defs">
        <sub from="#ARCH#"          to="$platform" />

	<sub from="#MAKE#"          to="$make" />
	<sub from="#RANLIB#"        to="$ranlib" />
	<sub from="#AR#"            to="$ar" />
        <sub from="#ARFLAGS#"       to="$arflags" />
	<sub from="#RM#"            to="$rm" />

	<sub from="#CPP#"           to="$cpp" />
	<sub from="#CPPFLAGS#"      to="$cppflags -C
					`index('$writemode','binary')==0  ? '-DWRITE_PARTICLE_BINARY'  : ' '`
					`index('$writemode','sionlib')==0 ? '-DWRITE_PARTICLE_SIONLIB' : ' '`
					`index('$PAPI','on')==0 ? '-I/usr/local/beta/papi-3.6.2/include -DPEPC_USE_PAPI_$PAPI_SCOPE' : ' '`" />

        <sub from="#CCPRE#"         to=" " />
	<sub from="#MPI_CC#"        to="$mpi_cc" />
        <sub from="#CFLAGS#"        to="$cflags $optflags" />    

	<sub from = "#FCPRE#"      to = "`index('$SCALASCA','on')==0 ? 'scalasca -instrument' : ' '`" />
 	<sub from = "#MPI_F90#"    to = "$mpi_f90" />
        <sub from = "#F90FLAGS#"   to = "$f90flags $optflags -qtune=450 -qarch=450 -O3 -qipa -qipa=inline=key2addr
                                         `index('$GPROF','on')==0        ? '-g -pg'                   : ' '`
                                         `index('$IHPCT_MPITR','on')==0  ? '-g'                       : ' '`" />

	<sub from = "#LDPRE#"      to = "`index('$SCALASCA','on')==0 ? 'scalasca -instrument' : ' '`" />
        <sub from = "#LD#"         to = "$mpi_f90" />

        <sub from = "#LDFLAGS#"    to = "$ldflags $optflags -qtune=450 -qarch=450 -O3 -qipa -qipa=inline=key2addr
                                         `index('$GPROF','on')==0 ? '-g -pg' : ' '`" />
        <sub from = "#LDLIBS#"     to = "`index('$IHPCT_MPITR','on')==0 ? '-L $(IHPCT_BASE)/lib64 -llicense -lmpitrace' : ' '`
                                         `index('$IHPCT_HWC','on')==0   ? '-L $(IHPCT_BASE)/lib64 -lhpm -llicense -lm'  : ' '`
 					 `index('$writemode','sionlib')==0 ? '-L/bgsys/local/sionlib/v1.1p4/lib/ -lsion' : ' '`" />
					
	<sub from = "#EXECNAME#"   to = "$execname" />
    </substitute>

    <!-- issue build command -->
    <command>(`index('$SCALASCA','on')==0 ? 'module load papi scalasca;' : ' '` `(index('$IHPCT_HWC','on')==0 || index('$IHPCT_MPITR','on')==0) ? 'module load hpct;' : ' '` make)</command> 

    
</compile>

<!-- ********************************************************** -->

<compile cname="GNU-Linux">

    <src directory="./../.." files="makefile makefiles/makefile.defs.jube 
	                            lpepcsrc sl_pepc pepc-e tools" />

    <!-- Create makefile.defs and substitute parameters -->
    <substitute infile="makefile.defs.jube" outfile="makefile.defs">
        <sub from="#ARCH#"     to="$platform" />

       <sub from="#MAKE#"     to="$make" />
       <sub from="#RANLIB#"   to="$ranlib" />
       <sub from="#AR#"       to="$ar" />
       <sub from="#ARFLAGS#"  to="$arflags" />
       <sub from="#RM#"       to="$rm" />
       
       <sub from="#CPP#"           to="$cpp" />
       <sub from="#CPPFLAGS#"      to="$cppflags -C
	    `index('$writemode','binary')==0  ? '-DWRITE_PARTICLE_BINARY'  : ' '`
	    `index('$writemode','sionlib')==0 ? '-DWRITE_PARTICLE_SIONLIB' : ' '`
	    `index('$PAPI','on')==0 ? '-I/usr/local/beta/papi-3.6.2/include -DPEPC_USE_PAPI_$PAPI_SCOPE' : ' '`" />

       <sub from="#CCPRE#"         to=" " />
       <sub from="#MPI_CC#"        to="$mpi_cc" />
       <sub from="#CFLAGS#"        to="$cflags $optflags" />    
       
       <sub from="#FCPRE#"    to="" />
       <sub from="#MPI_F90#"  to="$mpi_f90" />
       <sub from="#F90FLAGS#" to="$f90flags $optflags" />    

       <sub from="#LDPRE#"    to="" />
       <sub from="#LD#"       to="$mpi_f90" />
       <sub from="#LDFLAGS#"  to="$ldflags $optflags" />
       <sub from="#LDLIBS#"   to="-lmpich -lpthread" />

       <sub from="#EXECNAME#" to="$execname" />
    </substitute>

    <!-- issue build command -->
    <command>(make)</command>
    
</compile>


</compilation>
